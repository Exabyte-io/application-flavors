{% if subworkflowContext.MATERIAL_INDEX %}
{%- set input = input.perMaterial[subworkflowContext.MATERIAL_INDEX] -%}
{% endif -%}
&CONTROL
    calculation = 'scf'
    title = ''
    verbosity = 'low'
    restart_mode = '{{ input.RESTART_MODE }}'
    wf_collect = .true.
    tstress = .true.
    tprnfor = .true.
    outdir = {% raw %}'{{ JOB_WORK_DIR }}/outdir'{% endraw %}
    wfcdir = {% raw %}'{{ JOB_WORK_DIR }}/outdir'{% endraw %}
    prefix = '__prefix__'
    pseudo_dir = {% raw %}'{{ JOB_WORK_DIR }}/pseudo'{% endraw %}
/
&SYSTEM
    ibrav = {{ input.IBRAV }}
    nat = {{ input.NAT }}
    ntyp = {{ input.NTYP_WITH_LABELS }}
    nspin = 2
    ecutwfc = {{ cutoffs.wavefunction }}
    ecutrho = {{ cutoffs.density }}
    occupations = 'smearing'
    degauss = 0.005
    noncolin = .true.
    lspinorb = .true.
{%- if nonCollinearMagnetization.isStartingMagnetization %}
{%- for item in nonCollinearMagnetization.startingMagnetization %}
    starting_magnetization({{ item.index }}) = {{ item.value }} {% endfor -%}
{%- endif %}
{%- if nonCollinearMagnetization.isConstrainedMagnetization %}
    constrained_magnetization = '{{ nonCollinearMagnetization.constrainedMagnetization.constrainedMagnetizationType }}'
    lambda = {{ nonCollinearMagnetization.constrainedMagnetization.lambda }}
{%- endif %}
{%- if nonCollinearMagnetization.isExistingChargeDensity %}
{%- for item in nonCollinearMagnetization.constrainedMagnetization.values %}
    angle1({{ item.index }}) = {{ item.angle1 }}
    angle2({{ item.index }}) = {{ item.angle2 }} {% endfor -%}
    lforcet = .true.
{%- endif %}
/
&ELECTRONS
    diagonalization = 'david'
    diago_david_ndim = 4
    diago_full_acc = .true.
    mixing_beta = 0.3
    startingwfc = 'atomic+random'
{%- if nonCollinearMagnetization.isExistingChargeDensity %}
    startingpot = 'file'
{%- endif %}
/
&IONS
/
&CELL
/
ATOMIC_SPECIES
{{ input.ATOMIC_SPECIES_WITH_LABELS }}
ATOMIC_POSITIONS crystal
{{ input.ATOMIC_POSITIONS }}
CELL_PARAMETERS angstrom
{{ input.CELL_PARAMETERS }}
K_POINTS automatic
{% for d in kgrid.dimensions %}{{d}} {% endfor %}{% for s in kgrid.shifts %}{{s}} {% endfor %}
